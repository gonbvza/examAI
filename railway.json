{
    "build": {
      "builder": "nixpacks",
      "nixpacksPlan": {
        "phases": {
          "setup": {
            "aptPkgs": ["python3", "python3-pip", "python3-venv", "build-essential", "postgresql-client"]
          },
          "install": {
            "cmds": [
              "python3 -m venv /venv",
              "source /venv/bin/activate",
              "npm install --save-exact react react-dom @types/react@18.2.0 @types/react-dom@18.2.0 react-router-dom @fortawesome/react-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/fontawesome-svg-core react-modal @types/react-modal js-cookie @types/js-cookie",
              "npm install -g concurrently",
              "npm run build --prefix client",
              "cd server/server/ && pip install -r requirements.txt",
              "echo '#!/bin/bash' > start.sh",
              "echo 'cd client && npm run preview -- --host 0.0.0.0 --port \"$PORT\" &' >> start.sh",
              "echo 'source /venv/bin/activate' >> start.sh",
              "echo 'cd server/server/ && python -m pip install -r requirements.txt && python manage.py migrate' >> start.sh",
              "echo 'FRONTEND_PID=$!' >> start.sh",
              "echo 'python -m gunicorn serverDjango.wsgi:application --bind 0.0.0.0:8000 --workers 3 &' >> start.sh",
              "echo 'BACKEND_PID=$!' >> start.sh",
              "echo 'wait $FRONTEND_PID $BACKEND_PID' >> start.sh",
              "chmod +x start.sh"
            ]
          }
        }
      }
    },
    "deploy": {
      "startCommand": "./start.sh",
      "restartPolicyType": "ON_FAILURE",
      "restartPolicyMaxRetries": 10,
      "env": {
        "DJANGO_SECRET_KEY": "django-insecure-railway-deployment-key-should-be-changed",
        "DEBUG": "False",
        "DJANGO_LOGLEVEL": "info",
        "DJANGO_ALLOWED_HOSTS": ".railway.app",
        "DATABASE_ENGINE": "postgresql",
        "DATABASE_NAME": "${PGDATABASE}",
        "DATABASE_USERNAME": "${PGUSER}",
        "DATABASE_PASSWORD": "${PGPASSWORD}",
        "DATABASE_HOST": "${PGHOST}",
        "DATABASE_PORT": "${PGPORT}",
        "PORT": "3000"
      }
    },
    "plugins": {
      "postgresql": {
        "version": "17"
      }
    }
  }
